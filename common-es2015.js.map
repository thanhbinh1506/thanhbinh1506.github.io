{"version":3,"sources":["./src/app/common/api-service/api.service.ts","./src/app/common/api-service/send-data.service.ts","./src/app/common/core/login-cookie.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SendDataService } from './send-data.service';\r\nimport { CRUDCookieService } from './cookie-service';\r\n// import { Security } from './security';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    private url = '';\r\n    private getAllWhatUrl = '';\r\n    private audio = new Audio();\r\n    public language = 'vn';\r\n    // protected se: Security = new Security();\r\n\r\n    constructor(public httpClient: HttpClient,\r\n        private toastrService: ToastrService,\r\n        public cookie: CRUDCookieService,\r\n        public sendDataService: SendDataService\r\n    ) {\r\n        this.url = \"http://localhost:8000/api/\";\r\n        this.url = \"http://localhost/test/selectAllByWhat.php\";\r\n        this.url = \"http://35.240.200.20/src/Controller/SelectAllByWhat.php\";\r\n        this.url = \"http://hoctienganhphanxa.com/hoctienganhphanxa.com/hce/youngpinejobapi/Controller/SelectAllByWhatFE.php\";\r\n\r\n        // init data language\r\n        if (this.cookie.getCookie('language') == null) {\r\n            this.cookie.setCookie('language', 'vn');\r\n        }\r\n    }\r\n    public candidateId = '24';\r\n\r\n    /**\r\n     * get Language\r\n     */\r\n    getLanguage() {\r\n        if (this.cookie.getCookie('language') != null) {\r\n            this.language = this.cookie.getCookie('language');\r\n        } \r\n        return this.language;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param param \r\n     * @param what \r\n     */\r\n    excuteAllByWhat(param: any, what: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        };\r\n\r\n        param.what = what;\r\n        this.getAllWhatUrl = this.url;\r\n\r\n        // console.log('Param input', JSON.stringify(param));\r\n\r\n        // decode\r\n        // param = this.se.encode1(param);\r\n\r\n        return this.httpClient.post<any>(this.getAllWhatUrl, JSON.stringify(param), httpOptions)\r\n            .pipe(map((response: Response) => {\r\n                return response;\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * convert To Data\r\n     * @param data \r\n     */\r\n    convertToData(data): any[] {\r\n        data = JSON.parse(data + '');\r\n        let result: any[] = [];\r\n        data.forEach(item => {\r\n            item.fields.id = item.pk;\r\n            result.push(item.fields);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param date \r\n     */\r\n    formatDate(date: Date): string {\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return date.getFullYear() + '-'\r\n            + (month > 9 ? month : ('0' + month)) + '-'\r\n            + (day > 9 ? day : ('0' + day));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param param \r\n     * @param what \r\n     */\r\n    excuteAllByWhatWithUrl(url: string, param: any, what: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'my-auth-token',\r\n                'Access-Control-Allow-Origin': '*',\r\n            })\r\n        };\r\n\r\n        this.getAllWhatUrl = this.url + what;\r\n\r\n        console.log('Param input', JSON.stringify(param));\r\n\r\n        return this.httpClient.post<any>(url, JSON.stringify(param), httpOptions)\r\n            .pipe(map((response: Response) => response.json()));\r\n    }\r\n\r\n    public showError(mess: string) {\r\n        this.toastrService.error('Pinks Ways!', mess, {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public showSuccess(mess: string) {\r\n        this.toastrService.success('Pinks Ways!', mess + '!', {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public showWarning(mess: string) {\r\n        this.toastrService.warning('Pinks Ways!', mess + '!', {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public playSuccess() {\r\n        this.audio = new Audio();\r\n        this.audio.src = \"../../assets/sounds/beep-02.wav\";\r\n        this.audio.load();\r\n        this.audio.play();\r\n    }\r\n\r\n    public playError() {\r\n        this.audio = new Audio();\r\n        this.audio.src = \"../../assets/sounds/beep-05.wav\";\r\n        this.audio.load();\r\n        this.audio.play();\r\n    }\r\n\r\n    /**\r\n     * format Html Tag\r\n     * @param content \r\n     */\r\n    formatHtmlTag(content) {\r\n        let result: string;\r\n        let dummyElem = document.createElement('DIV');\r\n        dummyElem.innerHTML = content;\r\n        document.body.appendChild(dummyElem);\r\n        result = dummyElem.textContent;\r\n        document.body.removeChild(dummyElem);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n      * bỏ dấu tiếng việt để search\r\n    */\r\n    private cleanAccents(str: string): string {\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n        str = str.replace(/Đ/g, \"D\");\r\n        // Combining Diacritical Marks\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // huyền, sắc, hỏi, ngã, nặng \r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // mũ â (ê), mũ ă, mũ ơ (ư)\r\n\r\n        return str;\r\n    }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class SendDataService {\r\n    data$: Observable<any>;\r\n    language$: Observable<any>;\r\n    private sendData = new Subject<any>();\r\n    private sendDataLanguage = new Subject<any>();\r\n\r\n    constructor() {\r\n        this.data$ = this.sendData.asObservable();\r\n        this.language$ = this.sendDataLanguage.asObservable();\r\n    }\r\n\r\n    /**\r\n     * set Data Send\r\n     * @param data \r\n     */\r\n    setDataSend(data) {\r\n        this.sendData.next(data);\r\n    }\r\n\r\n    /**\r\n     * set Data Language\r\n     * @param data \r\n     */\r\n    setDataLanguage(data) {\r\n        this.sendDataLanguage.next(data);\r\n    }\r\n}","// import { CookieService } from 'ngx-cookie-service';\r\nimport { Injectable } from '@angular/core'; \r\n\r\n@Injectable()\r\nexport class LoginCookie {\r\n    public accountLogin: string = '0';\r\n\r\n    // constructor(\r\n    //     private cookieService: CookieService\r\n    // ) {\r\n\r\n    // }\r\n\r\n    // /**\r\n    //  * setAccountLogin\r\n    //  * @param value \r\n    //  */\r\n    // public setAccountLogin(value: string) {\r\n    //     this.cookieService.set('accountLogin', value);\r\n    //     this.accountLogin = value;\r\n    // }\r\n\r\n    // /**\r\n    //  * getAccountLogin\r\n    //  */\r\n    // public getAccountLogin(): string {\r\n    //     this.accountLogin = this.cookieService.get('accountLogin');\r\n    //     return this.accountLogin;\r\n    // } \r\n\r\n}"],"sourceRoot":"webpack:///"}