{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","webpack:///src/app/home-page/content/c2-detail-candidate/c2-detail-candidate.component.ts","webpack:///src/app/home-page/content/c2-detail-candidate/c2-detail-candidate.component.html","webpack:///src/app/home-page/content/c2-detail-candidate/c2-detail-candidate.module.ts"],"names":["ID_DELIMINATOR","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","getAttribute","match","RegisteredMessage","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","_document","hostElement","message","_canBeDescribed","_setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","element","removeChild","delete","preExistingContainer","getElementById","parentNode","style","display","body","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","ListKeyManagerOption","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","predicate","shouldWrap","enabled","direction","_horizontal","keys","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","previousIndex","updateActiveItem","next","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","key","toLocaleUpperCase","String","fromCharCode","preventDefault","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","Highlightable","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusableOption","FocusKeyManager","arguments","_origin","origin","focus","InteractivityChecker","_platform","hasAttribute","hasGeometry","getComputedStyle","visibility","isBrowser","frameElement","getFrameElement","getWindow","frameType","nodeName","toLowerCase","getTabIndexValue","BLINK","WEBKIT","isVisible","tabIndexValue","TRIDENT","FIREFOX","IOS","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","isDisabled","InteractivityChecker_Factory","window","_a","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","insertBefore","nextSibling","Promise","resolve","_executeOnStable","focusInitialElement","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","_toggleAnchorTabIndex","classList","add","isEnabled","fn","isStable","onStable","asObservable","value","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","create","nativeElement","destroy","autoCapture","activeElement","focusInitialElementWhenReady","hasAttached","_autoCapture","CdkTrapFocus_Factory","ɵdir","selectors","inputs","exportAs","propDecorators","selector","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","config","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","Element","hasNativeClosest","polyfillClosest","matches","prototype","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","setTimeout","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapInertStrategy","ManagedFocusTrap","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncerDefaultOptions","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","TOUCH_BUFFER_MS","FocusOptions","captureEventListenerOptions","passive","capture","FocusMonitor","_windowFocused","_elementInfo","_monitoredElementCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","composedPath","_windowFocusListener","_windowFocusTimeoutId","checkChildren","cachedInfo","subject","info","unlisten","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","elementInfo","complete","_setClasses","_decrementMonitoredElementCount","options","forEach","_info","stopMonitoring","className","shouldSet","remove","_toggleClass","_originTimeoutId","focusTarget","_lastFocusOrigin","_wasCausedByTouch","_emitOrigin","relatedTarget","run","document","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","emit","CdkMonitorFocus_Factory","outputs","isFakeMousedownFromScreenReader","buttons","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","testElement","backgroundColor","position","documentWindow","computedColor","replace","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","_applyBodyHighContrastModeCssClasses","ɵmod","ɵinj","A11yModule_Factory","imports","ngJitMode","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","old","normalizedValue","_rawDir","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","rf","ctx","features","provide","useExisting","providers","host","BidiModule","BidiModule_Factory","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","size","isEmpty","selected","_selected","sort","source","added","removed","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","altKey","shiftKey","ctrlKey","metaKey","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","MediaMatcher_Factory","head","sheet","insertRule","error","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","breakpointStates","response","breakpoints","state","queryObservable","observer","handler","nextMql","output","BreakpointObserver_Factory","split","reduce","a1","a2","concat","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_disabled","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","detach","overlayRef","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","HTMLElement","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","keydownEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","EDGE","test","navigator","userAgent","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","attachShadow","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","_attachedRef","ref","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","static","None","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ScrollingModule_Factory","CdkTextColumn_th_1_Template","ctx_r66","justify","headerText","CdkTextColumn_td_2_Template","data_r68","ctx_r67","dataAccessor","CanStick","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CellDef","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_stickyEnd","_name","cssClassFriendlyName","CdkColumnDef_Factory","ɵCdkColumnDef_BaseFactory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","cell","headerCell","footerCell","sticky","stickyEnd","BaseCdkCell","columnDef","columnClassName","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_columnsDiffer","columns","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","directives","Default","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","rows","stickyDirections","row","_removeStickyStyle","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","_addStickyStyle","rowsToStick","stickyStates","reverse","stickyHeight","rowIndex","tableElement","tfoot","zIndex","_getCalculatedZIndex","hasDirection","dirValue","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","role","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","MAX_VALUE","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","_renderRows","_getAllRenderRows","prevIndex","_insertRow","_updateRowIndexContext","rowView","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","renderRows","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","_forceRenderDataRows","_dataSource","isArray","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","renderIndex","outlet","_getCellTemplates","cellTemplate","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","stickyCheckReducer","d","_trackByFn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","CdkTable_Query","CdkTable_Template","descendants","queryList","TextColumnOptions","TEXT_COLUMN_OPTIONS","CdkTextColumn","_table","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","listenerOptions","AutofillMonitor","_monitoredElements","result","animationName","isAutofilled","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkTextareaAutosize","_previousMinRows","_textareaElement","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","textareaClone","cloneNode","border","padding","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","selectionStart","selectionEnd","isStopped","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","TextFieldModule","TextFieldModule_Factory","VERSION","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","coerceArray","coerceCssPixelValue","coerceElement","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","color","focusVia","disableRipple","attributes","attribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","enterDuration","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","MAT_CHECKBOX_CLICK_ACTION","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","multi","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_MatCheckboxMixinBase","_clickAction","ariaLabelledby","_uniqueId","labelPosition","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_indeterminate","focusOrigin","_syncIndeterminate","checked","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","stopPropagation","toggle","_transitionCheckState","_inputElement","animSuffix","nativeCheckbox","_required","newValue","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","required","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r17","_r19","inputId","_getAriaChecked","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","MatOption_mat_pseudo_checkbox_0_Template","ctx_r16","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","sanityChecks","_hasDoneGlobalChecks","_window","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_isTestEnv","_checksAreEnabled","doctype","theme","computedStyle","version","full","MatCommonModule_Factory","CanDisable","mixinDisabled","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","_tabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","errorState","stateChanges","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","isErrorState","HasInitialized","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","ɵ0","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","parse","displayFormat","clone","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","obj","NaN","n","str","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","constructor","inheritances","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","setClass","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_triggerEvents","_activeRipples","_onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","terminateOnPointerUp","persistent","fadeOut","containerRect","_containerRect","animationConfig","animation","centered","radius","distanceToFurthestCorner","transitionDuration","enforceStyleRecalculation","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","rippleEl","opacity","_triggerElement","_removeTriggerEvents","delay","getPropertyValue","distX","distY","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","group","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","_emitSelectionChangeEvent","viewValue","_selectViaInteraction","multiple","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","MatCalendarBody_tr_0_Template","ctx_r73","_cellPadding","numCols","MatCalendarBody_tr_1_td_1_Template","ctx_r77","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r82","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","item_r79","ctx_r81","_cellClicked","colIndex_r80","rowIndex_r76","ctx_r78","_cellWidth","_isActiveCell","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r75","ctx_r74","MatMonthView_th_3_Template","day_r85","long","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r91","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","ctx_r90","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r92","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r93","_userSelected","ctx_r87","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","_r95","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","ctx_r94","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r96","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r97","_goToDateInView","ctx_r88","MatCalendar_mat_multi_year_view_4_Template","_r99","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r98","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r100","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r101","ctx_r89","MatDatepickerToggle__svg_svg_2_Template","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatDatepickerIntl_Factory","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","columnChanges","colIndex","cellNumber","MatCalendarBody_Factory","MatCalendarBody_Template","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dateAdapter","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","localeChanges","_init","_selectedDate","selectedYear","selectedMonth","selectedDate","createDate","oldActiveDate","addCalendarDays","getNumDaysInMonth","addCalendarYears","_focusActiveCell","_getDateInCurrentMonth","_todayDate","_monthLabel","getMonthNames","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","cellClasses","_hasSameMonthAndYear","d1","d2","validDate","_getValidDateOrNull","deserialize","clampDate","_minDate","_maxDate","MatMonthView_Factory","MatMonthView_Query","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","isSameMultiYearView","_selectedYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","normalizedDate","_monthSelected","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","currentView","_isSameView","maxYearOfPage","minYearName","maxYearName","formatYearRange","MatCalendarHeader_Factory","MatCalendar","MatCalendarHeader_Template","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_7_listener","previousClicked","MatCalendarHeader_Template_button_click_8_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","_moveFocusOnNextTick","startView","_intlChanges","_calendarHeaderPortal","headerComponent","startAt","_currentView","focusActiveCell","firstChange","_getCurrentViewComponent","monthView","yearView","multiYearView","ngAfterContentInit","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","matDatepickerAnimations","transformPanel","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_animationState","_animationDone","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","MatDatepickerContent_HostBindings","MatDatepickerContent_animation_transformPanel_done_HostBindingHandler","datepicker","touchUi","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","_dateFilter","calendarHeaderComponent","animations","MatDatepicker","_dialog","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_destroyPopup","oldValue","_datepickerInput","_valueChange","_openAsDialog","_openAsPopup","_popupComponentRef","_popupRef","instance","_startExitAnimation","_dialogRef","completeClose","afterClosed","componentInstance","_createPopup","_createPopupPositionStrategy","detachments","getConnectedOverlayOrigin","_getThemePalette","MatDatepicker_Factory","opened","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","controlValue","_maxValidator","_filterValidator","_validator","compose","c","isAltDownArrow","_datepicker","readOnly","lastValueWasValid","_value","_formatValue","_registerInput","oldDate","_min","_max","blur","MatDatepickerInput_Factory","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","_onInput","MatDatepickerInput_change_HostBindingHandler","_onChange","MatDatepickerInput_blur_HostBindingHandler","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","toIso8601","matDatepicker","matDatepickerFilter","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","parsedTabIndex","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","MatDatepickerToggle_ContentQueries","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_focus_HostBindingHandler","MatDatepickerToggle_Template","MatDatepickerToggle_Template_button_click_0_listener","_open","MatDatepickerModule","MatDatepickerModule_Factory","entryComponents","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","disableClose","ariaDescribedBy","ariaLabelledBy","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","_savePreviouslyFocusedElement","_ariaLabelledBy","_focusTrap","toFocus","toState","_restoreFocus","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","phaseName","_closeFallbackTimeout","_result","dialogResult","totalTime","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","afterOpened","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","global","userInjector","containerPortal","containerRef","_createInjector","contentRef","injectionTokens","previousValue","siblings","sibling","dialogs","MatDialog_Factory","dialogElementUid","MatDialogClose","getClosestDialog","proxiedChange","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","MatDivider","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r31","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r35","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r34","updateOutlineGap","ctx_r25","empty","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r27","MatFormField_div_13_Template","ctx_r28","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r37","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r29","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","float","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelStart","labelWidth","child","getRootNode","_appearance","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","MatFormFieldModule","MatFormFieldModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","iconElement","_toSvgElement","div","innerHTML","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","_uid","_isServer","_isNativeSelect","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_ariaDescribedby","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","MatInputModule","MatInputModule_Factory","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r55","MatPaginator_div_2_mat_form_field_3_Template","_r57","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ctx_r56","_changePageSize","ctx_r52","pageSize","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r53","MatPaginator_div_2_Template","ctx_r49","MatPaginator_button_6_Template","_r59","MatPaginator_button_6_Template_button_click_0_listener","ctx_r58","firstPage","ctx_r50","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r61","MatPaginator_button_13_Template_button_click_0_listener","ctx_r60","lastPage","ctx_r51","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","endIndex","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","ProgressAnimationEnd","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","progressbarId","MatProgressBar","_isNoopAnimation","_bufferValue","animationEnd","_animationEndSubscription","_rectangleFillValue","scale","bufferValue","_primaryValueBar","clamp","MatProgressBar_Factory","MatProgressBar_Query","MatProgressBar_HostBindings","MatProgressBar_Template","_bufferTransform","_primaryTransform","MatProgressBarModule","MatProgressBarModule_Factory","MatSelect_span_4_Template","ctx_r40","MatSelect_span_5_span_1_Template","ctx_r43","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r41","customTrigger","MatSelect_ng_template_8_Template","_r47","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r46","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r48","ctx_r42","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_panelOpen","_scrollTop","_compareWith","o1","o2","_destroy","_optionIds","_positions","_disableOptionCentering","_focused","optionSelectionChanges","option","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","_triggerRect","_initKeyManager","_resetOptions","_initializeSelection","_keyManager","withTypeAhead","_typeaheadDebounceInterval","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","previouslySelectedOption","onKeydown","selectedOption","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","_calculateOverlayOffsetX","panel","_selectValue","_sortValues","correspondingOption","withVerticalOrientation","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","_propagateChanges","sortComparator","valueToEmit","activeOptionIndex","labelCount","_getItemHeight","current","itemHeight","_getItemCount","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_getAriaLabel","paddingWidth","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","writeValue","selectedOptions","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_getAriaLabelledby","_getAriaActiveDescendant","compareWith","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r38","MatSelectModule","MatSelectModule_Factory","MatSortHeader_div_3_Template","_r64","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r63","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r65","ctx_r62","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortable","Sort","MatSortBase","_MatSortMixinBase","MatSort","sortables","sortChange","sortable","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_disableClear","MatSort_Factory","ɵMatSort_BaseFactory","sortOrder","SORT_ANIMATION_TRANSITION","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","ArrowViewStateTransition","MatSortHeaderColumnDef","MatSortHeader","_sort","_columnDef","_showIndicatorHint","_arrowDirection","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","fromState","_setIndicatorHintVisible","visible","_isDisabled","viewState","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","_handleClick","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","MatSortHeader_Template","_renderArrow","MatSortModule","MatSortModule_Factory","MatTextColumn_th_1_Template","ctx_r69","MatTextColumn_td_2_Template","data_r71","ctx_r70","MatTable","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","paginator","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","matTooltipAnimations","tooltipState","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_ariaDescriber","_hammerLoader","touchGestures","_message","_passiveListeners","_isTooltipVisible","hide","show","_setupPointerEvents","_touchstartTimeout","_tooltipInstance","removeDescription","_showTimeoutId","_hideTimeoutId","_portal","TooltipComponent","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","scrollableAncestors","_updatePosition","_getOrigin","_getOverlayPosition","main","isLtr","originPosition","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","_disableNativeGesturesIfNecessary","touchendListener","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","tmp_0_0","currVal_0","pipes","MatTooltipModule","MatTooltipModule_Factory","C2DetailCandidateComponent","api","router","activatedRoute","candidate","password","avatar","fullname","born","country","city","provine","address","sex","marriage","positionapply","academiclevel","yearsofexperience","workingplace","career","typeofwork","level","salary","minsalary","maxsalary","targetjob","descriptionstargetjob","school","department","certificate","specialized","classification","startadmission","endadmission","additioninfor","posisionold","companyold","startworked","endworked","descriptionsoldjob","descriptionskill","skill","language","infomation","cityname","districtname","numberview","workingplacename","phone","email","params","idcandidate","onLoadCandidateData","param","excuteAllByWhat","log","genderNumber","marriageNumber","typeOfWorkNumber","expYears","listBannerAds","templateUrl","styleUrls","C2DetailCandidateModule","forChild","bootstrap"],"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AA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA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","file":"c2-detail-candidate-c2-detail-candidate-module-es5.js","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, QueryList, isDevMode, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-reference.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-describer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\nfunction RegisteredMessage() { }\nif (false) {\n    /**\n     * The element containing the message.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.messageElement;\n    /**\n     * The number of elements that reference this message element via `aria-describedby`.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.referenceCount;\n}\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AriaDescriber.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/list-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\nfunction ListKeyManagerOption() { }\nif (false) {\n    /**\n     * Whether the option is disabled.\n     * @type {?|undefined}\n     */\n    ListKeyManagerOption.prototype.disabled;\n    /**\n     * Gets the label for this option.\n     * @return {?}\n     */\n    ListKeyManagerOption.prototype.getLabel = function () { };\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => (/** @type {?} */ (this))._pressedLetters.push(letter))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Gets whether the user is currently typing into the manager using the typeahead feature.\n     * @return {?}\n     */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItem;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._wrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._letterKeyStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._typeaheadSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._horizontal;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._allowedModifierKeys;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._skipPredicateFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._pressedLetters;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     * @type {?}\n     */\n    ListKeyManager.prototype.tabOut;\n    /**\n     * Stream that emits whenever the active item of the list manager changes.\n     * @type {?}\n     */\n    ListKeyManager.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/activedescendant-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\nfunction Highlightable() { }\nif (false) {\n    /**\n     * Applies the styles for an active item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setActiveStyles = function () { };\n    /**\n     * Applies the styles for an inactive item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setInactiveStyles = function () { };\n}\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/focus-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n * @record\n */\nfunction FocusableOption() { }\nif (false) {\n    /**\n     * Focuses the `FocusableOption`.\n     * @param {?=} origin\n     * @return {?}\n     */\n    FocusableOption.prototype.focus = function (origin) { };\n}\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusKeyManager.prototype._origin;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/interactivity-checker/interactivity-checker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    InteractivityChecker.prototype._platform;\n}\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @protected\n     * @param {?} enabled\n     * @return {?}\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._startAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._endAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._hasAttached;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.startAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.endAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype._enabled;\n    /** @type {?} */\n    FocusTrap.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._checker;\n    /** @type {?} */\n    FocusTrap.prototype._ngZone;\n    /** @type {?} */\n    FocusTrap.prototype._document;\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._ngZone;\n}\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"] });\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_enabled;\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._document;\n    /**\n     * Underlying FocusTrap instance.\n     * @type {?}\n     */\n    CdkTrapFocus.prototype.focusTrap;\n    /**\n     * Previously focused element to restore focus to upon destroy when using autoCapture.\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._previouslyFocusedElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._focusTrapFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _focusTrapManager\n     * @param {?} _inertStrategy\n     * @param {?} config\n     */\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /**\n     * Whether the FocusTrap is enabled.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /**\n     * Notifies the FocusTrapManager that this FocusTrap will be destroyed.\n     * @return {?}\n     */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._focusTrapManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._inertStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/polyfill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IE 11 compatible closest implementation that is able to start from non-Element Nodes.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (/** @type {?} */ ((hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector))));\n}\n/**\n * Polyfill for browsers without Element.closest.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction polyfillClosest(element, selector) {\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (/** @type {?} */ ((curr || null)));\n}\n/** @type {?} */\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/**\n * IE 11 compatible matches implementation.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        ((/** @type {?} */ (element)))['msMatchesSelector'](selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /**\n         * Focus event handler.\n         */\n        this._listener = null;\n    }\n    /**\n     * Adds a document event listener that keeps focus inside the FocusTrap.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }\n        this._listener = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this._trapFocus(focusTrap, e));\n        focusTrap._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            focusTrap._document.addEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }));\n    }\n    /**\n     * Removes the event listener added in preventFocus.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     * @private\n     * @param {?} focusTrap\n     * @param {?} event\n     * @return {?}\n     */\n    _trapFocus(focusTrap, event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Focus event handler.\n     * @type {?}\n     * @private\n     */\n    EventListenerFocusTrapInertStrategy.prototype._listener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\nif (false) {\n    /**\n     * Whether to defer the creation of FocusTrap elements to be\n     * done manually by the user. Default is to create them\n     * automatically.\n     * @type {?}\n     */\n    ConfigurableFocusTrapConfig.prototype.defer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the inert strategy.\n * @type {?}\n */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n * @record\n */\nfunction FocusTrapInertStrategy() { }\nif (false) {\n    /**\n     * Makes all elements outside focusTrap unfocusable.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.preventFocus = function (focusTrap) { };\n    /**\n     * Reverts elements made unfocusable by preventFocus to their previous state.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.allowFocus = function (focusTrap) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n * @record\n */\nfunction ManagedFocusTrap() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._enable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._disable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype.focusInitialElementWhenReady = function () { };\n}\n/**\n * Injectable that ensures only the most recently enabled FocusTrap is active.\n */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((/**\n         * @param {?} ft\n         * @return {?}\n         */\n        (ft) => ft !== focusTrap));\n        /** @type {?} */\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        /** @type {?} */\n        const stack = this._focusTrapStack;\n        /** @type {?} */\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\n/** @nocollapse */ FocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapManager.prototype._focusTrapStack;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that allows easy instantiation of configurable focus traps.\n */\nclass ConfigurableFocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _focusTrapManager\n     * @param {?} _document\n     * @param {?=} _inertStrategy\n     */\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    /**\n     * @param {?} element\n     * @param {?=} config\n     * @return {?}\n     */\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        /** @type {?} */\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\n/** @nocollapse */\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/** @nocollapse */ ConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._inertStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._focusTrapManager;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer-tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Object that can be used to configure the default options for the LiveAnnouncer.\n * @record\n */\nfunction LiveAnnouncerDefaultOptions() { }\nif (false) {\n    /**\n     * Default politeness for the announcements.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.politeness;\n    /**\n     * Default duration for the announcement messages.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.duration;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._liveElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._previousTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._defaultOptions;\n}\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._politeness;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._previousAnnouncedText;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._subscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._liveAnnouncer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-monitor/focus-monitor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n * @record\n */\nfunction FocusOptions() { }\nif (false) {\n    /**\n     * Whether the browser should scroll to the element when it is focused.\n     * @type {?|undefined}\n     */\n    FocusOptions.prototype.preventScroll;\n}\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ FocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The focus origin that the next focus event is a result of.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._origin;\n    /**\n     * The FocusOrigin of the last focus event tracked by the FocusMonitor.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastFocusOrigin;\n    /**\n     * Whether the window has just been focused.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocused;\n    /**\n     * The target of the last touch event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastTouchTarget;\n    /**\n     * The timeout id of the touch timeout, used to cancel timeout later.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._touchTimeoutId;\n    /**\n     * The timeout id of the window focus timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusTimeoutId;\n    /**\n     * The timeout id of the origin clearing timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._originTimeoutId;\n    /**\n     * Map of elements being monitored to their info.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._elementInfo;\n    /**\n     * The number of elements currently being monitored.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._monitoredElementCount;\n    /**\n     * Event listener for `keydown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentKeydownListener;\n    /**\n     * Event listener for `mousedown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentMousedownListener;\n    /**\n     * Event listener for `touchstart` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentTouchstartListener;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._platform;\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._monitorSubscription;\n    /** @type {?} */\n    CdkMonitorFocus.prototype.cdkFocusChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/fake-mousedown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HighContrastMode = {\n    NONE: 0,\n    BLACK_ON_WHITE: 1,\n    WHITE_ON_BLACK: 2,\n};\n/**\n * CSS class applied to the document body when in black-on-white high-contrast mode.\n * @type {?}\n */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/**\n * CSS class applied to the document body when in white-on-black high-contrast mode.\n * @type {?}\n */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/**\n * CSS class applied to the document body when in high-contrast mode.\n * @type {?}\n */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-constrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    /**\n     * @param {?} _platform\n     * @param {?} document\n     */\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * Gets the current high-constrast-mode for the page.\n     * @return {?}\n     */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests.\n        /** @type {?} */\n        const documentWindow = (/** @type {?} */ (this._document.defaultView));\n        /** @type {?} */\n        const computedColor = (documentWindow.getComputedStyle(testElement).backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /**\n     * Applies CSS classes indicating high-contrast mode to document body (browser-only).\n     * @return {?}\n     */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            /** @type {?} */\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            /** @type {?} */\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ HighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/a11y-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n    /**\n     * @param {?} highContrastModeDetector\n     */\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); }, imports: [[PlatformModule, ObserversModule]] });\n/** @nocollapse */\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir-document-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/directionality.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Direction as passed in by the consumer.\n     * @type {?}\n     */\n    Dir.prototype._rawDir;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/bidi-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/keycodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/modifiers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/observe-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\n/** @nocollapse */ MutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\nif (false) {\n    /**\n     * Keeps track of the existing MutationObservers so they can be reused.\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._observedElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._mutationObserverFactory;\n}\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_debounce;\n    /**\n     * Event emitted for each change in the element's content.\n     * @type {?}\n     */\n    CdkObserveContent.prototype.event;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._debounce;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._currentSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._ngZone;\n}\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        if (origin instanceof HTMLElement) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { Injectable, Optional, Inject, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, ElementRef, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature()] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule,\n        CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r66 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r66.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r66.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r68 = ctx.$implicit;\n    const ctx_r67 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r67.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r67.dataAccessor(data_r68, ctx_r67.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, TemplateRef, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, Optional, Inject, ViewChild, ContentChildren, InjectionToken, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('9.1.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Wraps the provided value in an array, unless the provided value is an array. */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r17 = ɵngcc0.ɵɵreference(1);\n        const _r19 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r19.textContent || !_r19.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r17)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r16.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r16.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('9.1.0');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.1.0');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     */\n    constructor(highContrastModeDetector, sanityChecks) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        if (isEnabled && this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        if (isDisabled || !this._document || !this._document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8)); }, imports: [[BidiModule],\n        BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Reference to the global `document` object.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._document;\n    /**\n     * Reference to the global 'window' object.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._window;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\n/** @nocollapse */ ErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine,\n        MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                    ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Events to be registered on the trigger element.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerEvents;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onMousedown;\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onTouchStart;\n    /**\n     * Function being called whenever the trigger is being released.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onPointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign({}, this._globalOptions.animation), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule,\n        PlatformModule]; }, exports: function () { return [MatRipple,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple,\n        MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption,\n        MatOptgroup]; }, imports: function () { return [MatRippleModule,\n        CommonModule,\n        MatPseudoCheckboxModule]; }, exports: function () { return [MatOption,\n        MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, ChangeDetectorRef, Optional, Inject, ViewChild, forwardRef, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MAT_DATE_FORMATS, DateAdapter, mixinColor } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r73 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r73._cellPadding)(\"padding-bottom\", ctx_r73._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r73.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r73.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r77 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r77._cellPadding)(\"padding-bottom\", ctx_r77._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r77._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r77._firstRowOffset >= ctx_r77.labelMinRequiredCells ? ctx_r77.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r82 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r82); const item_r79 = ctx.$implicit; const ctx_r81 = ɵngcc0.ɵɵnextContext(2); return ctx_r81._cellClicked(item_r79); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r79 = ctx.$implicit;\n    const colIndex_r80 = ctx.index;\n    const rowIndex_r76 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r78 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r78._cellWidth)(\"padding-top\", ctx_r78._cellPadding)(\"padding-bottom\", ctx_r78._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r79.enabled)(\"mat-calendar-body-active\", ctx_r78._isActiveCell(rowIndex_r76, colIndex_r80));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r79.cssClasses)(\"tabindex\", ctx_r78._isActiveCell(rowIndex_r76, colIndex_r80) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r79.ariaLabel)(\"aria-disabled\", !item_r79.enabled || null)(\"aria-selected\", ctx_r78.selectedValue === item_r79.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r78.selectedValue === item_r79.value)(\"mat-calendar-body-today\", ctx_r78.todayValue === item_r79.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r79.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r75 = ctx.$implicit;\n    const rowIndex_r76 = ctx.index;\n    const ctx_r74 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r76 === 0 && ctx_r74._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r75);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r85 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r85.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r85.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r91 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r91); const ctx_r90 = ɵngcc0.ɵɵnextContext(); return ctx_r90.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r91); const ctx_r92 = ɵngcc0.ɵɵnextContext(); return ctx_r92._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r91); const ctx_r93 = ɵngcc0.ɵɵnextContext(); return ctx_r93._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r87 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r87.activeDate)(\"selected\", ctx_r87.selected)(\"dateFilter\", ctx_r87.dateFilter)(\"maxDate\", ctx_r87.maxDate)(\"minDate\", ctx_r87.minDate)(\"dateClass\", ctx_r87.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r95 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r95); const ctx_r94 = ɵngcc0.ɵɵnextContext(); return ctx_r94.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r95); const ctx_r96 = ɵngcc0.ɵɵnextContext(); return ctx_r96._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r95); const ctx_r97 = ɵngcc0.ɵɵnextContext(); return ctx_r97._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r88 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r88.activeDate)(\"selected\", ctx_r88.selected)(\"dateFilter\", ctx_r88.dateFilter)(\"maxDate\", ctx_r88.maxDate)(\"minDate\", ctx_r88.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r99 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r99); const ctx_r98 = ɵngcc0.ɵɵnextContext(); return ctx_r98.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r99); const ctx_r100 = ɵngcc0.ɵɵnextContext(); return ctx_r100._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r99); const ctx_r101 = ɵngcc0.ɵɵnextContext(); return ctx_r101._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r89 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r89.activeDate)(\"selected\", ctx_r89.selected)(\"dateFilter\", ctx_r89.dateFilter)(\"maxDate\", ctx_r89.maxDate)(\"minDate\", ctx_r89.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n/** @nocollapse */ MatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.changes;\n    /**\n     * A label for the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.calendarLabel;\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.openCalendarLabel;\n    /**\n     * A label for the previous month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMonthLabel;\n    /**\n     * A label for the next month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMonthLabel;\n    /**\n     * A label for the previous year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevYearLabel;\n    /**\n     * A label for the next year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextYearLabel;\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMultiYearLabel;\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMultiYearLabel;\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMonthViewLabel;\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMultiYearViewLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCalendarCell.prototype.value;\n    /** @type {?} */\n    MatCalendarCell.prototype.displayValue;\n    /** @type {?} */\n    MatCalendarCell.prototype.ariaLabel;\n    /** @type {?} */\n    MatCalendarCell.prototype.enabled;\n    /** @type {?} */\n    MatCalendarCell.prototype.cssClasses;\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell mat-focus-indicator\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", \"mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell mat-focus-indicator\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"selectedValue === item.value\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      role=\\\"button\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content\\\"\\n        [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">\\n        {{item.displayValue}}\\n      </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The label for the table. (e.g. \"Jan 2017\").\n     * @type {?}\n     */\n    MatCalendarBody.prototype.label;\n    /**\n     * The cells to display in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.rows;\n    /**\n     * The value in the table that corresponds to today.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.todayValue;\n    /**\n     * The value in the table that is currently selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValue;\n    /**\n     * The minimum number of free cells needed to fit the label in the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.labelMinRequiredCells;\n    /**\n     * The number of columns in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.numCols;\n    /**\n     * The cell number of the active cell in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.activeCell;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.cellAspectRatio;\n    /**\n     * Emits when a new value is selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValueChange;\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._firstRowOffset;\n    /**\n     * Padding for the individual date cells.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellPadding;\n    /**\n     * Width of an individual cell.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/month-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [selectedValue]=\\\"_selectedDate!\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateClass;\n    /**\n     * Emits when a new date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype.selectedChange;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype._userSelection;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMonthView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMonthView.prototype._matCalendarBody;\n    /**\n     * The label for this month (e.g. \"January 2017\").\n     * @type {?}\n     */\n    MatMonthView.prototype._monthLabel;\n    /**\n     * Grid of calendar cells representing the dates of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._weeks;\n    /**\n     * The number of blank cells in the first row before the 1st of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._firstWeekOffset;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._selectedDate;\n    /**\n     * The date of the month that today falls on. Null if today is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._todayDate;\n    /**\n     * The names of the weekdays.\n     * @type {?}\n     */\n    MatMonthView.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dateFormats;\n    /** @type {?} */\n    MatMonthView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/multi-year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.dateFilter;\n    /**\n     * Emits when a new year is selected.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.selectedChange;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatMultiYearView.prototype.yearSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMultiYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the currently displayed years.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._years;\n    /**\n     * The year that today falls on.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._todayYear;\n    /**\n     * The year of the selected date. Null if the selected date is null.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._selectedYear;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatMultiYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._dir;\n}\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatYearView.prototype.dateFilter;\n    /**\n     * Emits when a new month is selected.\n     * @type {?}\n     */\n    MatYearView.prototype.selectedChange;\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatYearView.prototype.monthSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the months of the year.\n     * @type {?}\n     */\n    MatYearView.prototype._months;\n    /**\n     * The label for this year (e.g. \"2017\").\n     * @type {?}\n     */\n    MatYearView.prototype._yearLabel;\n    /**\n     * The month in this year that today falls on. Null if today is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._todayMonth;\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._selectedMonth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dateFormats;\n    /** @type {?} */\n    MatYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._intl;\n    /** @type {?} */\n    MatCalendarHeader.prototype.calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateFormats;\n}\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        const currentView = this.currentView;\n        /** @type {?} */\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\nif (false) {\n    /**\n     * An input indicating the type of the header component, if set.\n     * @type {?}\n     */\n    MatCalendar.prototype.headerComponent;\n    /**\n     * A portal containing the header component type for this calendar.\n     * @type {?}\n     */\n    MatCalendar.prototype._calendarHeaderPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._intlChanges;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._moveFocusOnNextTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._startAt;\n    /**\n     * Whether the calendar should be started in month or year view.\n     * @type {?}\n     */\n    MatCalendar.prototype.startView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateClass;\n    /**\n     * Emits when the currently selected date changes.\n     * @type {?}\n     */\n    MatCalendar.prototype.selectedChange;\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearSelected;\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthSelected;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatCalendar.prototype._userSelection;\n    /**\n     * Reference to the current month view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthView;\n    /**\n     * Reference to the current year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearView;\n    /**\n     * Reference to the current multi-year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.multiYearView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._clampedActiveDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._currentView;\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     * @type {?}\n     */\n    MatCalendar.prototype.stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatDatepickerContentBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Current state of the animation.\n         */\n        this._animationState = 'enter';\n        /**\n         * Emits when an animation has finished.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationDone.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._minDate\\\"\\n    [maxDate]=\\\"datepicker._maxDate\\\"\\n    [dateFilter]=\\\"datepicker._dateFilter\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"datepicker._selected\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\nif (false) {\n    /**\n     * Reference to the internal calendar component.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._calendar;\n    /**\n     * Reference to the datepicker that created the overlay.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype.datepicker;\n    /**\n     * Whether the datepicker is above or below the input.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._isAbove;\n    /**\n     * Current state of the animation.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationState;\n    /**\n     * Emits when an animation has finished.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationDone;\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    MatDatepickerContent.prototype._changeDetectorRef;\n}\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            /** @type {?} */\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => this._destroyPopup()));\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._dialogRef.componentInstance.color = this.color;\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        /** @type {?} */\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        /** @type {?} */\n        const ref = this._popupComponentRef = (/** @type {?} */ (this._popupRef)).attach(portal);\n        ref.instance.datepicker = this;\n        ref.instance.color = this.color;\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (this._popupRef)).updatePosition();\n        }));\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Destroys the current popup overlay.\n     * @private\n     * @return {?}\n     */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._scrollStrategy;\n    /**\n     * An input indicating the type of the custom header component for the calendar, if set.\n     * @type {?}\n     */\n    MatDatepicker.prototype.calendarHeaderComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._startAt;\n    /**\n     * The view that the calendar should start in.\n     * @type {?}\n     */\n    MatDatepicker.prototype.startView;\n    /** @type {?} */\n    MatDatepicker.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._disabled;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.yearSelected;\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.monthSelected;\n    /**\n     * Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatDatepicker.prototype.panelClass;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatDatepicker.prototype.dateClass;\n    /**\n     * Emits when the datepicker has been opened.\n     * @type {?}\n     */\n    MatDatepicker.prototype.openedStream;\n    /**\n     * Emits when the datepicker has been closed.\n     * @type {?}\n     */\n    MatDatepicker.prototype.closedStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._opened;\n    /**\n     * The id for the datepicker calendar.\n     * @type {?}\n     */\n    MatDatepicker.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._validSelected;\n    /**\n     * A reference to the overlay when the calendar is opened as a popup.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupRef;\n    /**\n     * A reference to the dialog when the calendar is opened as a dialog.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialogRef;\n    /**\n     * Reference to the component instantiated in popup mode.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupComponentRef;\n    /**\n     * The element that was focused before the datepicker was opened.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._focusedElementBeforeOpen;\n    /**\n     * Subscription to value changes in the associated input element.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._inputSubscription;\n    /**\n     * The input element this datepicker is associated with.\n     * @type {?}\n     */\n    MatDatepicker.prototype._datepickerInput;\n    /**\n     * Emits when the datepicker is disabled.\n     * @type {?}\n     */\n    MatDatepicker.prototype._disabledChange;\n    /**\n     * Emits new selected date when selected date changes.\n     * @type {?}\n     */\n    MatDatepicker.prototype._selectedChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nif (false) {\n    /**\n     * The new value for the target datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.value;\n    /**\n     * Reference to the datepicker input component that emitted the event.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.target;\n    /**\n     * Reference to the native input element associated with the datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.targetElement;\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        const lastValueWasValid = this._lastValueValid;\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else if (lastValueWasValid !== this._lastValueValid) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_value;\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepickerInput.prototype._datepicker;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._disabled;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateChange;\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateInput;\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._valueChange;\n    /**\n     * Emits when the disabled state has changed\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._disabledChange;\n    /** @type {?} */\n    MatDatepickerInput.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._cvaOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validatorOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._datepickerSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._localeSubscription;\n    /**\n     * The form control validator for whether the input parses.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._parseValidator;\n    /**\n     * The form control validator for the min date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._minValidator;\n    /**\n     * The form control validator for the max date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._maxValidator;\n    /**\n     * The form control validator for the date filter.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._filterValidator;\n    /**\n     * The combined form control validator for this input.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validator;\n    /**\n     * Whether the last value set on the input was valid.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._lastValueValid;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._elementRef;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._formField;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerToggle.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._stateChanges;\n    /**\n     * Datepicker instance that the button will toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.datepicker;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._disabled;\n    /**\n     * Whether ripples on the toggle should be disabled.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.disableRipple;\n    /**\n     * Custom icon set by the consumer.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._customIcon;\n    /**\n     * Underlying button element.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._button;\n    /** @type {?} */\n    MatDatepickerToggle.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatMultiYearView, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n\n//# sourceMappingURL=datepicker.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalInjector, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, TemplateRef, Injectable, Injector, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._state = 2 /* CLOSED */;\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.dispose();\n            }), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatDialogConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        // When the dialog backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            }));\n        }\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const injectionTokens = new WeakMap([\n            [MatDialogContainer, dialogContainer],\n            [MAT_DIALOG_DATA, config.data],\n            [MatDialogRef, dialogRef]\n        ]);\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            injectionTokens.set(Directionality, {\n                value: config.direction,\n                change: of()\n            });\n        }\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r31 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r31._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r35); const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r25 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r25._control.empty && !ctx_r25._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r25._control.empty && !ctx_r25._shouldAlwaysFloat)(\"mat-accent\", ctx_r25.color == \"accent\")(\"mat-warn\", ctx_r25.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r25.appearance != \"outline\")(\"id\", ctx_r25._labelId)(\"ngSwitch\", ctx_r25._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r25._control.id)(\"aria-owns\", ctx_r25._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r25.hideRequiredMarker && ctx_r25._control.required && !ctx_r25._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r27.color == \"accent\")(\"mat-warn\", ctx_r27.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r28 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r28._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r37 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r37._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r37.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r29 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r29._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r29.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r55 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r55);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r55, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r57 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r57); const ctx_r56 = ɵngcc0.ɵɵnextContext(2); return ctx_r56._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r52 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r52.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r52.pageSize)(\"disabled\", ctx_r52.disabled)(\"aria-label\", ctx_r52._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r52._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r53 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r53.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r49 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r49._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r49._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r49._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r59 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r58 = ɵngcc0.ɵɵnextContext(); return ctx_r58.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r50 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r50._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r50._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r50._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r50._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r61 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r61); const ctx_r60 = ɵngcc0.ɵɵnextContext(); return ctx_r60.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r51 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r51._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r51._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r51._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r51._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r40 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r40.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r43 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r43.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r41 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r41.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r46 = ɵngcc0.ɵɵnextContext(); return ctx_r46._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r48 = ɵngcc0.ɵɵnextContext(); return ctx_r48._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r42._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r42._transformOrigin)(\"font-size\", ctx_r42._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r42.panelClass)(\"@transformPanel\", ctx_r42.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r38 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r38)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r64 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r63 = ɵngcc0.ɵɵnextContext(); return ctx_r63._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r65 = ɵngcc0.ɵɵnextContext(); return ctx_r65._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r62 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r62._getArrowViewState())(\"@arrowPosition\", ctx_r62._getArrowViewState())(\"@allowChildren\", ctx_r62._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r62._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r62._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r62._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r69 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r69.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r69.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r71 = ctx.$implicit;\n    const ctx_r70 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r70.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r70.dataAccessor(data_r71, ctx_r70.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Subscription, Observable, Observer } from 'rxjs';\r\nimport { ApiService } from 'src/app/common/api-service/api.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-c2-detail-candidate',\r\n  templateUrl: './c2-detail-candidate.component.html',\r\n  styleUrls: ['./c2-detail-candidate.component.scss']\r\n})\r\nexport class C2DetailCandidateComponent implements OnInit {\r\n\r\n  /** for table */\r\n  subscription: Subscription[] = [];\r\n\r\n  listBannerAds: any;\r\n  \r\n  /**\r\n   * constructor\r\n   * @param api \r\n   */\r\n  constructor(private api: ApiService, private dialog: MatDialog, private router: Router,\r\n    private activatedRoute: ActivatedRoute) {\r\n    // add validate for controls\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.idcandidate = params['idcandidate'];\r\n      this.onLoadCandidateData();\r\n    });\r\n  }\r\n\r\n  candidate = {\r\n    id: 0,\r\n    password: '',\r\n    avatar: '',\r\n    fullname: '',\r\n    born: '',\r\n    country: '',\r\n    city: '',\r\n    provine: '',\r\n    address: '',\r\n    sex: '',\r\n    marriage: '',\r\n    positionapply: '',\r\n    academiclevel: '',\r\n    yearsofexperience: '',\r\n    workingplace: '',\r\n    career: '',\r\n    typeofwork: '',\r\n    level: '',\r\n    salary: '',\r\n    minsalary: '',\r\n    maxsalary: '',\r\n    targetjob: '',\r\n    descriptionstargetjob: '',\r\n    school: '',\r\n    department: '',\r\n    certificate: '',\r\n    specialized: '',\r\n    classification: '',\r\n    startadmission: '',\r\n    endadmission: '',\r\n    additioninfor: '',\r\n    posisionold: '',\r\n    companyold: '',\r\n    startworked: '',\r\n    endworked: '',\r\n    descriptionsoldjob: '',\r\n    descriptionskill: '',\r\n    skill: '',\r\n    language: '',\r\n    infomation: '',\r\n    cityname: '',\r\n    districtname: '',\r\n    numberview: 0,\r\n    workingplacename: '',\r\n    phone: 0,\r\n    email: '',\r\n  };\r\n\r\n  idcandidate: number;\r\n\r\n  /**\r\n   * onFillterClick\r\n   */\r\n  onLoadCandidateData() {\r\n    const param = { \"id\": this.idcandidate };\r\n    this.subscription.push(this.api.excuteAllByWhat(param, '22').subscribe(data => {\r\n      if (data.length > 0) {\r\n        this.candidate = data[0];\r\n        console.log(this.candidate);\r\n      }\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Get Name Gender By Gender Number\r\n   * @param genderNumber \r\n   */\r\n  convertSexNumberToSexName(genderNumber) {\r\n    return (genderNumber == '0') ? 'Nam' : 'Nữ'\r\n  }\r\n\r\n  /**\r\n   * convertMarriageNumberToMarriageName\r\n   * @param marriageNumber \r\n   */\r\n  convertMarriageNumberToMarriageName(marriageNumber) {\r\n    return (marriageNumber == '0') ? 'Độc thân' : 'Đã kết hôn'\r\n  }\r\n\r\n  /**\r\n   * convert Type Of Work Number To Type Of Work Name\r\n   * @param typeOfWorkNumber \r\n   */\r\n  convertTOWNumberToTOWName(typeOfWorkNumber) {\r\n    switch (typeOfWorkNumber) {\r\n\r\n      case '1': {\r\n        return 'Toàn thời gian cố định';\r\n        break;\r\n      }\r\n\r\n      case '2': {\r\n        return 'Bán thời gian cố định';\r\n        break;\r\n      }\r\n\r\n      case '3': {\r\n        return 'Toàn thời gian tạm thời';\r\n        break;\r\n      }\r\n\r\n      case '4': {\r\n        return 'Bán thòi gian tạm thời';\r\n        break;\r\n      }\r\n\r\n      case '5': {\r\n        return 'Theo hợp đồng / tư vấn';\r\n        break;\r\n      }\r\n\r\n      case '6': {\r\n        return 'Thực tập';\r\n        break;\r\n      }\r\n\r\n      case '7': {\r\n        return 'Khác';\r\n        break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * convertExpYeasNumberToExpYeasName\r\n   * @param expYears \r\n   */\r\n  convertExpYeasNumberToExpYeasName(expYears) {\r\n    switch (expYears) {\r\n      case '1': {\r\n        return 'Chưa có kinh nghiệm';\r\n        break;\r\n      }\r\n\r\n      case '2': {\r\n        return 'Dưới 1 năm';\r\n        break;\r\n      }\r\n\r\n      case '3': {\r\n        return '1 năm';\r\n        break;\r\n      }\r\n\r\n      case '4': {\r\n        return '2 năm';\r\n        break;\r\n      }\r\n\r\n      case '5': {\r\n        return '3 năm';\r\n        break;\r\n      }\r\n\r\n      case '6': {\r\n        return '4 năm';\r\n        break;\r\n      }\r\n\r\n      case '7': {\r\n        return '5 năm';\r\n        break;\r\n      }\r\n\r\n      case '8': {\r\n        return 'Trên 5 năm';\r\n        break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n  * get Banner Ads\r\n  */\r\n  getBannerAds() {\r\n    const param = {}\r\n    this.subscription.push(this.api.excuteAllByWhat(param, '69').subscribe(data => {\r\n      if (data.length > 0) {\r\n        // set data for listBannerAds\t\r\n        this.listBannerAds = data;\r\n        console.log('listbanner', this.listBannerAds);\r\n\r\n      }\r\n    }))\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"wp-inner\">\r\n    <div class=\"block-breadcrumb\">\r\n        <div class=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Trang chủ</a></li>\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Danh sách ứng viên</a></li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{{candidate.positionapply}}\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n    <div class=\"header container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-9\">\r\n                <div class=\"box-left\">\r\n                    <div class=\"row header-inner\">\r\n                        <div class=\"col-md-3 avatar\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid\" src=\"../../../../assets/img/image_candidate.jpg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-9 info-basic\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 mt-md-3 pl-md-0\">\r\n                                    <p class=\"name\">{{candidate.fullname}}</p>\r\n                                    <p class=\"job\">{{candidate.positionapply}}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row info-bot\">\r\n                                <div class=\"col-md-6 col-6 pl-md-0\">\r\n                                    <p><i class=\"fas fa-briefcase\"></i>{{candidate.born | date: 'dd/MM/yyyy'}}</p>\r\n                                    <p><i class=\"fas fa-map-marker-alt\"></i>{{candidate.address}}</p>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-6\">\r\n                                    <p><i class=\"fas fa-venus-mars\"></i>{{convertSexNumberToSexName(candidate.sex)}}</p>\r\n                                    <p><i\r\n                                            class=\"fas fa-medal\"></i>{{convertMarriageNumberToMarriageName(candidate.marriage)}}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"see-doc\">\r\n                                <p>Bạn đang xem hồ sơ ứng viên đã được phân loại trên PineJob. Hồ sơ có giá trị 3 điểm.\r\n                                    Đồng\r\n                                    ý xem <span style=\"color: #22924c\">bấm vào đây</span>.</p>\r\n                                <div class=\"block-btn\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"><i\r\n                                            class=\"far fa-heart\"></i>Lưu\r\n                                        hồ sơ</button>\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\" data-toggle=\"modal\"\r\n                                        data-target=\"#exampleModalCenter\"><i class=\"far fa-eye\"\r\n                                            aria-hidden=\"true\"></i>Xem\r\n                                        liên hệ</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"bg-half\"></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"desc-detail\">\r\n                            <div class=\"info-doc\">\r\n                                <!-- info document -->\r\n                                <div class=\"block-title\">\r\n                                    <h3 class=\"title-left\">\r\n                                        <span class=\"text\">\r\n                                            Thông tin hồ sơ\r\n                                        </span>\r\n                                        <span class=\"line\"></span>\r\n                                    </h3>\r\n                                </div>\r\n                                <div class=\"row info-fast\">\r\n                                    <div class=\"col-6\">\r\n                                        <p><i class=\"fas fa-globe\"></i> Ngành nghề: <span>{{candidate.career}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"fas fa-briefcase\"></i> Trình độ học vấn:\r\n                                            <span>{{candidate.academiclevel}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"fas fa-laptop-house\"></i>Loại hình công việc:\r\n                                            <span>{{convertTOWNumberToTOWName(candidate.typeofwork)}}</span></p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Cấp bậc mong muốn:\r\n                                            <span>{{candidate.targetjob}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Mức lương mong muốn:\r\n                                            <span>{{candidate.minsalary}} - {{candidate.maxsalary}}\r\n                                                triệu</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Số năm kinh nghiệm:\r\n                                            <span>{{convertExpYeasNumberToExpYeasName(candidate.yearsofexperience)}}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <p><i class=\"fas fa-globe\"></i> Nơi làm việc: <button type=\"button\"\r\n                                                class=\"btn btn-primary btn-sm\">{{candidate.workingplacename}}</button>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Quận / huyện:\r\n                                            <span>{{candidate.districtname}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Tỉnh / thành phố:\r\n                                            <span>{{candidate.cityname}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Mã hồ sơ: <span>{{candidate.id}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Số lượt xem:\r\n                                            <span>{{candidate.numberview}}</span>\r\n                                        </p>\r\n                                        <p><i class=\"far fa-id-card\"></i> Ngày cập nhật:\r\n                                            <span>{{candidate.startadmission | date: 'dd/MM/yyyy'}}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- end info document -->\r\n\r\n                                <!-- target job -->\r\n                                <div class=\"block-title mt-md-3\">\r\n                                    <h3 class=\"title-left\">\r\n                                        <span class=\"text\">\r\n                                            Mục tiêu nghề nghiệp\r\n                                        </span>\r\n                                        <span class=\"line\"></span>\r\n                                    </h3>\r\n                                </div>\r\n                                <div class=\"row info-fast\">\r\n                                    <div class=\"col-md-12\">\r\n                                        {{candidate.descriptionstargetjob}}\r\n                                    </div>\r\n                                </div>\r\n                                <!-- and target job -->\r\n\r\n                                <!-- skill myseft -->\r\n                                <div class=\"block-title mt-md-3\">\r\n                                    <h3 class=\"title-left\">\r\n                                        <span class=\"text\">\r\n                                            Kỹ năng bản thân\r\n                                        </span>\r\n                                        <span class=\"line\"></span>\r\n                                    </h3>\r\n                                </div>\r\n                                <div class=\"row info-fast\">\r\n                                    <div class=\"col-md-12\">\r\n                                        {{candidate.descriptionskill}}\r\n                                    </div>\r\n                                </div>\r\n                                <!-- and skill myseft -->\r\n\r\n                                <!-- exp work -->\r\n                                <div class=\"block-title mt-md-3\">\r\n                                    <h3 class=\"title-left\">\r\n                                        <span class=\"text\">\r\n                                            Kinh nghiệm làm việc\r\n                                        </span>\r\n                                        <span class=\"line\"></span>\r\n                                    </h3>\r\n                                </div>\r\n                                <div class=\"row info-fast\">\r\n                                    <div class=\"col-md-12\">\r\n                                        {{candidate.descriptionsoldjob}}\r\n                                    </div>\r\n                                </div>\r\n                                <!-- and exp work -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"box-right\">\r\n                    <div class=\"row save-share\">\r\n                        <div class=\"col-md-6 col-6 pdf\">\r\n                            <i class=\"far fa-file-pdf\"></i>\r\n                            <p>Lưu PDF</p>\r\n                            <span>NEW</span>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-6 pdf\">\r\n                            <i class=\"fas fa-share-alt\"></i>\r\n                            <p>Chia sẻ</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row banner  sidebar mt-3\">\r\n                            <a href=\"\" class=\"d-block mb-3\" *ngFor=\"let item of listBannerAds\"><img class=\"img-fluid\"\r\n                                src=\"{{item.banner}}\"\r\n                                alt=\"\"></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <tbody>\r\n                <tr>\r\n                  <th>Họ Tên</th>\r\n                    <td>{{candidate.fullname}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Số điện thoại</th>\r\n                    <td>{{candidate.phone}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email</th>\r\n                    <td>{{candidate.email}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { C2DetailCandidateComponent} from './c2-detail-candidate.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'; \r\nimport { MatPaginatorModule } from '@angular/material/paginator';  \r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';  \r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule} from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n    declarations: [C2DetailCandidateComponent],\r\n    imports: [   \r\n        CommonModule,   \r\n        RouterModule.forChild([\r\n            {   \r\n                path: '',\r\n                component: C2DetailCandidateComponent,\r\n                children: []\r\n            }\r\n        ]),\r\n        MatCardModule,\r\n    MatProgressBarModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    TransferHttpCacheModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n        \r\n    ],\r\n    providers: [],\r\n    bootstrap: [C2DetailCandidateComponent]\r\n})\r\n\r\nexport class C2DetailCandidateModule { }\r\n"]}