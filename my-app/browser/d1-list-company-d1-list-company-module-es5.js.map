{"version":3,"sources":["webpack:///src/app/home-page/content/d1-list-company/d1-list-company.component.ts","webpack:///src/app/home-page/content/d1-list-company/d1-list-company.component.html","webpack:///src/app/home-page/content/d1-list-company/d1-list-company.module.ts"],"names":["D1ListCompanyComponent","api","router","activatedRoute","subscription","newestCompanies","mostVistedCompanies","companies","cities","careeres","cityId","careerId","companyName","count","isSearch","countCompany","observable","create","observer","subscribe","done","params","keyword","career","city","onLoadDataCity","onLoadDataCareer","onLoadNewestCompanyData","onLoadMostVistedCompanyData","param","push","excuteAllByWhat","data","length","temp","id","name","forEach","item","next","element","colSlide","processList","rowSlide","active","url","navigate","onFilterClick","selector","templateUrl","styleUrls","D1ListCompanyModule","forChild","path","component","children","declarations","imports"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBwB;;AAAoE;;AAAmB;;;;;;AAA3C;;AAAwB;;AAAA;;;;;;AAQpE;;AAA8D;;AAAiB;;;;;;AAAvC;;AAAsB;;AAAA;;;;;;AAsB1E;;AACI;;AACI;;AACI;;AACA;;AACI;;AAAuB;;AAA2B;;AAClD;;AAAqB;;AAA0B;;AAC/C;;AAAqB;;AAAwB;;AACjD;;AACJ;;AACJ;;AACJ;;;;;;AARsC;;AAAA;;AAEC;;AAAA;;AACF;;AAAA;;AACA;;AAAA;;;;;;AAjBjD;;AACI;;AACI;;AACI;;AACI;;AAAM;;AAAgB;;AAAQ;;AAClC;;AACJ;;AAGA;;AACI;;AAYJ;;AAEJ;;AACJ;;;;;;AArBsB;;AAAA;;AAMyC;;AAAA;;;;;;;;AAsC3B;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AACI;;AACA;;AACI;;AAAuB;;AAAyB;;AAChD;;AAAqB;;AAAwB;;AAC7C;;AAAG;;AAAsB;;AAC7B;;AACJ;;AACJ;;;;;;AAPkC;;AAAA;;AAEC;;AAAA;;AACF;;AAAA;;AAClB;;AAAA;;;;;;AARnB;;AACI;;AAWJ;;;;;;AAVQ;;AAAA;;;;;;;;;;;;AALhB;;AAEI;;AACI;;AAaJ;;AACJ;;;;;;AAjB2B;;AAGG;;AAAA;;;;;;;;AA8DlB;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AACI;;AACA;;AACI;;AAAuB;;AAAyB;;AAChD;;AAAqB;;AAAwB;;AAC7C;;AAAqB;;AAAsB;;AAC/C;;AACJ;;AACJ;;;;;;AAPkC;;AAAA;;AAEC;;AAAA;;AACF;;AAAA;;AACA;;AAAA;;;;;;AARrC;;AACI;;AAWJ;;;;;;AAVQ;;AAAA;;;;;;AALhB;;AAEI;;AACI;;AAaJ;;AACJ;;;;;;AAjB2B;;AAGG;;AAAA;;;;QD9IzCA,sB;AAkBX;;;;AAIA,sCAAoBC,GAApB,EACUC,MADV,EACkCC,cADlC,EACkE;AAAA;;AAAA;;AAChE;AAFkB,aAAAF,GAAA,GAAAA,GAAA;AACV,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,cAAA,GAAAA,cAAA;AAtBlC;;AACA,aAAAC,YAAA,GAA+B,EAA/B;AAEA,aAAAC,eAAA,GAAqB,EAArB;AACA,aAAAC,mBAAA,GAAyB,EAAzB;AACA,aAAAC,SAAA,GAAe,EAAf;AACA,aAAAC,MAAA,GAAY,EAAZ;AACA,aAAAC,QAAA,GAAc,EAAd;AACA,aAAAC,MAAA,GAAS,EAAT;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,WAAA,GAAY,EAAZ;AAIA,aAAAC,KAAA,GAAM,CAAN;AAqFA;;;;AAGA,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,YAAA,GAAe,CAAf,CAjFkE,CAGhE;;AACA,aAAKC,UAAL,GAAkB,gDAAWC,MAAX,CAAkB,UAACC,QAAD,EAAmB;AACrD,eAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD,SAFiB,CAAlB;AAGD;;;;mCAEO;AAAA;;AACN,eAAKF,UAAL,CAAgBG,SAAhB,CAA0B,UAAAC,IAAI,EAAE;AAC9B,gBAAGA,IAAI,IAAE,CAAT,EAAW;AACT,oBAAI,CAACjB,cAAL,CAAoBkB,MAApB,CAA2BF,SAA3B,CAAqC,UAAAE,MAAM,EAAI;AAC7C,sBAAI,CAACT,WAAL,GAAmBS,MAAM,CAACC,OAA1B;AACA,sBAAI,CAACX,QAAL,GAAgBU,MAAM,CAACE,MAAvB;AACA,sBAAI,CAACb,MAAL,GAAcW,MAAM,CAACG,IAArB;AACD,eAJD;AAKD;AACF,WARD;AAUA,eAAKC,cAAL;AACA,eAAKC,gBAAL;AACA,eAAKC,uBAAL;AACA,eAAKC,2BAAL;AACD;AAED;;;;;;yCAGc;AAAA;;AACZ,cAAMC,KAAK,GAAC,EAAZ;AACC,eAAKzB,YAAL,CAAkB0B,IAAlB,CAAuB,KAAK7B,GAAL,CAAS8B,eAAT,CAAyBF,KAAzB,EAAgC,IAAhC,EAAsCV,SAAtC,CAAgD,UAAAa,IAAI,EAAI;AAE7E,gBAAIA,IAAI,CAACC,MAAL,GAAY,CAAhB,EAAmB;AAClB,kBAAIC,IAAI,GAAG,CAAC;AACVC,kBAAE,EAAG,GADK;AAEVC,oBAAI,EAAG;AAFG,eAAD,CAAX;AAIAJ,kBAAI,CAACK,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnBJ,oBAAI,CAACJ,IAAL,CAAUQ,IAAV;AACD,eAFD;AAGA,oBAAI,CAAC9B,MAAL,GAAc0B,IAAd,CARkB,CAUjB;;AACD,oBAAI,CAACxB,MAAL,GAAc,MAAI,CAACF,MAAL,CAAY,CAAZ,EAAe2B,EAA7B;AACA,oBAAI,CAACtB,KAAL;;AACA,oBAAI,CAACK,QAAL,CAAcqB,IAAd,CAAmB,MAAI,CAAC1B,KAAxB;AACD;AACD,WAjBsB,CAAvB;AAkBF;AAED;;;;;;2CAGgB;AAAA;;AACd,cAAMgB,KAAK,GAAC,EAAZ;AACC,eAAKzB,YAAL,CAAkB0B,IAAlB,CAAuB,KAAK7B,GAAL,CAAS8B,eAAT,CAAyBF,KAAzB,EAAgC,IAAhC,EAAsCV,SAAtC,CAAgD,UAAAa,IAAI,EAAI;AAE7E,gBAAIA,IAAI,CAACC,MAAL,GAAY,CAAhB,EAAmB;AAClB,kBAAIC,IAAI,GAAG,CAAC;AACVC,kBAAE,EAAG,GADK;AAEVC,oBAAI,EAAG;AAFG,eAAD,CAAX;AAIAJ,kBAAI,CAACK,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnBJ,oBAAI,CAACJ,IAAL,CAAUQ,IAAV;AACD,eAFD;AAGA,oBAAI,CAAC7B,QAAL,GAAgByB,IAAhB,CARkB,CAUjB;;AACD,oBAAI,CAACvB,QAAL,GAAgB,MAAI,CAACF,QAAL,CAAc,CAAd,EAAiB0B,EAAjC;AAEA,oBAAI,CAACtB,KAAL;;AACA,oBAAI,CAACK,QAAL,CAAcqB,IAAd,CAAmB,MAAI,CAAC1B,KAAxB;AACD;AACD,WAlBsB,CAAvB;AAmBF;;;wCAOY;AAAA;;AACX,eAAKC,QAAL,GAAgB,IAAhB;AACA,eAAKC,YAAL,GAAoB,CAApB;AACA,cAAMc,KAAK,GAAC;AAAC,2BAAe,KAAKjB,WAArB;AAAkC,oBAAQ,KAAKF,MAA/C;AAAuD,sBAAU,KAAKC;AAAtE,WAAZ;AACC,eAAKP,YAAL,CAAkB0B,IAAlB,CAAuB,KAAK7B,GAAL,CAAS8B,eAAT,CAAyBF,KAAzB,EAAgC,IAAhC,EAAsCV,SAAtC,CAAgD,UAAAa,IAAI,EAAI;AAC9E,gBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AAEnB;AACAD,kBAAI,CAACK,OAAL,CAAa,UAAAG,OAAO,EAAI;AACtB,sBAAI,CAACzB,YAAL,GAAoB,MAAI,CAACA,YAAL,GAAoB,CAAxC;AACD,eAFD,EAHmB,CAOnB;;AACA,oBAAI,CAACR,SAAL,GAAiByB,IAAjB;AACD,aATD,MAUK;AACH;AACA,oBAAI,CAACzB,SAAL,GAAgB,EAAhB;AACD;AACD,WAfsB,CAAvB;AAgBD;AAGD;;;;;;kDAGsB;AAAA;;AACrB,cAAMsB,KAAK,GAAC,EAAZ;AACC,eAAKzB,YAAL,CAAkB0B,IAAlB,CAAuB,KAAK7B,GAAL,CAAS8B,eAAT,CAAyBF,KAAzB,EAAgC,IAAhC,EAAsCV,SAAtC,CAAgD,UAAAa,IAAI,EAAI;AAC9E,gBAAIA,IAAI,CAACC,MAAL,GAAY,CAAhB,EAAmB;AAEjB,kBAAIQ,QAAQ,GAAG,EAAf;AACA,kBAAIC,WAAW,GAAG,CAChB;AACIC,wBAAQ,EAAG,CACTF,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CADF,EAETS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAFF,EAGTS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAHF,EAITS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAJF,CADf;AAOEY,sBAAM,EAAE;AAPV,eADgB,EAUhB;AACED,wBAAQ,EAAG,CACPF,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CADJ,EAEPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAFJ,EAGPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAHJ,EAIPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAJJ,CADb;AAOEY,sBAAM,EAAE;AAPV,eAVgB,CAAlB;AAoBA,oBAAI,CAACvC,eAAL,GAAuBqC,WAAvB;AACA,oBAAI,CAAC7B,KAAL;;AACA,oBAAI,CAACK,QAAL,CAAcqB,IAAd,CAAmB,MAAI,CAAC1B,KAAxB;AACD;AACD,WA5BsB,CAAvB;AA6BF;;;sDAG2B;AAAA;;AAC1B,cAAMgB,KAAK,GAAC,EAAZ;AACC,eAAKzB,YAAL,CAAkB0B,IAAlB,CAAuB,KAAK7B,GAAL,CAAS8B,eAAT,CAAyBF,KAAzB,EAAgC,IAAhC,EAAsCV,SAAtC,CAAgD,UAAAa,IAAI,EAAI;AAC9E,gBAAIA,IAAI,CAACC,MAAL,GAAY,CAAhB,EAAmB;AAEjB,kBAAIQ,QAAQ,GAAG,EAAf;AACA,kBAAIC,WAAW,GAAG,CAChB;AACIC,wBAAQ,EAAG,CACTF,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CADF,EAETS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAFF,EAGTS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAHF,EAITS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAJF,CADf;AAOEY,sBAAM,EAAE;AAPV,eADgB,EAUhB;AACED,wBAAQ,EAAG,CACPF,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CADJ,EAEPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAFJ,EAGPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAHJ,EAIPS,QAAQ,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,CAJJ,CADb;AAOEY,sBAAM,EAAE;AAPV,eAVgB,CAAlB;AAoBA,oBAAI,CAACtC,mBAAL,GAA2BoC,WAA3B;AAEA,oBAAI,CAAC7B,KAAL;;AACA,oBAAI,CAACK,QAAL,CAAcqB,IAAd,CAAmB,MAAI,CAAC1B,KAAxB;AACD;AACD,WA7BsB,CAAvB;AA8BF;AAED;;;;;;uCAGesB,E,EAAE;AACf,cAAMU,GAAG,GAAG,wBAAwBV,EAApC;AACA,eAAKjC,MAAL,CAAY4C,QAAZ,CAAqB,CAACD,GAAD,CAArB;AACD;;;;;;;uBA7MU7C,sB,EAAsB,kJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,m3E;AAAA;AAAA;ACVnC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAAO;AAAA;AAAA;;AAAP;;AAEJ;;AACJ;;AAGA;;AACI;;AACI;;AACA;;AAAQ;AAAA;AAAA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAQ;AAAA;AAAA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAQ;AAAA,mBAAS,IAAA+C,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;AAA6B;;AAAQ;;AAAO;;AACxF;;AACJ;;AACJ;;AACJ;;AAGA;;AA4BA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAEK;;AACG;;AAkBJ;;AAIA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AAIA;;AACI;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAEI;;AACI;;AAkBJ;;AAIA;;AACI;;AAEJ;;AACA;;AACI;;AAEJ;;AAIA;;AACI;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AAGJ;;AACJ;;;;AAnL2B;;AAAA;;AASC;;AAAA;;AACI;;AAAA;;AAOJ;;AAAA;;AACI;;AAAA;;AAY3B;;AAAA;;AA6CuB;;AAAA;;AA6DA;;AAAA;;;;;;;;;sED5If/C,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTgD,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyBaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAhBnB,CACL,2EADK,EAEL,4DAFK,EAIL,6DAAaC,QAAb,CAAsB,CAClB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE,iFAFf;AAGIC,gBAAQ,EAAE;AAHd,OADkB,CAAtB,CAJK,EAWL,0DAXK,EAYL,kEAZK,CAgBmB;;;;0HAAnBJ,mB,EAAmB;AAAA,uBAjBb,iFAiBa;AAjBS,kBAEjC,2EAFiC,EAGjC,4DAHiC,EAGrB,4DAHqB,EAYjC,0DAZiC,EAajC,kEAbiC;AAiBT,O;AAJL,K;;;;;sEAIdA,mB,EAAmB;cAlB/B,sDAkB+B;eAlBtB;AACNK,sBAAY,EAAE,CAAC,iFAAD,CADR;AAENC,iBAAO,EAAE,CACL,2EADK,EAEL,4DAFK,EAIL,6DAAaL,QAAb,CAAsB,CAClB;AACIC,gBAAI,EAAE,EADV;AAEIC,qBAAS,EAAE,iFAFf;AAGIC,oBAAQ,EAAE;AAHd,WADkB,CAAtB,CAJK,EAWL,0DAXK,EAYL,kEAZK;AAFH,S;AAkBsB,Q","file":"d1-list-company-d1-list-company-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subscription, Observable, Observer  } from 'rxjs';\r\nimport { ApiService } from 'src/app/common/api-service/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-d1-list-company',\r\n  templateUrl: './d1-list-company.component.html',\r\n  styleUrls: ['./d1-list-company.component.scss']\r\n})\r\nexport class D1ListCompanyComponent implements OnInit {\r\n  /** for table */\r\n  subscription: Subscription[] = [];\r\n\r\n  newestCompanies: any=[];\r\n  mostVistedCompanies: any=[];\r\n  companies: any=[];\r\n  cities: any=[];\r\n  careeres: any=[];\r\n  cityId = '';\r\n  careerId = '';\r\n  companyName='';\r\n\r\n  observable: Observable<any>;  \r\n  observer: Observer<any>;\r\n  count=0;\r\n\r\n\r\n  /**\r\n   * constructor\r\n   * @param api \r\n   */\r\n  constructor(private api: ApiService,\r\n    private router: Router, private activatedRoute: ActivatedRoute) {\r\n    // add validate for controls\r\n    \r\n    // xử lý bất đồng bộ  \r\n    this.observable = Observable.create((observer: any) => {  \r\n      this.observer = observer; \r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.observable.subscribe(done=>{\r\n      if(done==4){\r\n        this.activatedRoute.params.subscribe(params => {\r\n          this.companyName = params.keyword;\r\n          this.careerId = params.career;\r\n          this.cityId = params.city;\r\n        });\r\n      }\r\n    })\r\n    \r\n    this.onLoadDataCity();\r\n    this.onLoadDataCareer();\r\n    this.onLoadNewestCompanyData();\r\n    this.onLoadMostVistedCompanyData();\r\n  }\r\n\r\n  /**\r\n   * onLoadDataCity\r\n   */\r\n  onLoadDataCity(){\r\n    const param={};\r\n     this.subscription.push(this.api.excuteAllByWhat(param, '63').subscribe(data => {\r\n\r\n       if (data.length>0) {\r\n        let temp = [{\r\n          id : '0',\r\n          name : 'Địa điểm'\r\n        }];\r\n        data.forEach(item => {\r\n          temp.push(item);\r\n        })\r\n        this.cities = temp;\r\n\r\n         // set first select city combobox\r\n        this.cityId = this.cities[0].id;  \r\n        this.count++;\r\n        this.observer.next(this.count);\r\n      }\r\n     }));\r\n  }\r\n\r\n  /**\r\n   * onLoadDataCareer\r\n   */\r\n  onLoadDataCareer(){\r\n    const param={};\r\n     this.subscription.push(this.api.excuteAllByWhat(param, '64').subscribe(data => {\r\n\r\n       if (data.length>0) {\r\n        let temp = [{\r\n          id : '0',\r\n          name : 'Ngành nghề'\r\n        }];\r\n        data.forEach(item => {\r\n          temp.push(item);\r\n        })\r\n        this.careeres = temp;\r\n\r\n         // set first select career combobox\r\n        this.careerId = this.careeres[0].id;  \r\n        \r\n        this.count++;\r\n        this.observer.next(this.count);\r\n      }\r\n     }));\r\n  }\r\n\r\n  /**\r\n   * onFillterClick\r\n   */\r\n  isSearch = false;\r\n  countCompany = 0;\r\n  onFilterClick(){\r\n    this.isSearch = true;\r\n    this.countCompany = 0;\r\n    const param={\"companyname\": this.companyName, \"city\": this.cityId, \"career\": this.careerId};\r\n     this.subscription.push(this.api.excuteAllByWhat(param, '66').subscribe(data => {\r\n      if (data.length > 0) {\r\n        \r\n        // get number of company have been finded\r\n        data.forEach(element => {\r\n          this.countCompany = this.countCompany + 1;\r\n        });\r\n\r\n        // set data for table\r\n        this.companies = data;\r\n      }\r\n      else {\r\n        // set data for table\r\n        this.companies =[];\r\n      }\r\n     }));\r\n   }\r\n\r\n   \r\n   /**\r\n    * onLoadNewestCompanyData\r\n    */\r\n  onLoadNewestCompanyData(){\r\n    const param={};\r\n     this.subscription.push(this.api.excuteAllByWhat(param, '62').subscribe(data => {\r\n      if (data.length>0) {\r\n        \r\n        let colSlide = [];\r\n        let processList = [\r\n          {\r\n              rowSlide : [\r\n                colSlide = [data[0]],\r\n                colSlide = [data[1]],\r\n                colSlide = [data[2]],\r\n                colSlide = [data[3]],\r\n            ],\r\n            active: true\r\n          },\r\n          {\r\n            rowSlide : [\r\n                colSlide = [data[4]],\r\n                colSlide = [data[5]],\r\n                colSlide = [data[6]],\r\n                colSlide = [data[7]],\r\n                ],\r\n            active: false\r\n          }\r\n        ];\r\n        this.newestCompanies = processList;\r\n        this.count++;\r\n        this.observer.next(this.count);\r\n      }\r\n     }));\r\n  }\r\n\r\n  \r\n   onLoadMostVistedCompanyData(){\r\n    const param={};\r\n     this.subscription.push(this.api.excuteAllByWhat(param, '67').subscribe(data => {\r\n      if (data.length>0) {\r\n        \r\n        let colSlide = [];\r\n        let processList = [\r\n          {\r\n              rowSlide : [\r\n                colSlide = [data[0]],\r\n                colSlide = [data[1]],\r\n                colSlide = [data[2]],\r\n                colSlide = [data[3]],\r\n            ],\r\n            active: true\r\n          },\r\n          {\r\n            rowSlide : [\r\n                colSlide = [data[4]],\r\n                colSlide = [data[5]],\r\n                colSlide = [data[6]],\r\n                colSlide = [data[7]],\r\n                ],\r\n            active: false\r\n          }\r\n        ];\r\n        this.mostVistedCompanies = processList;\r\n\r\n        this.count++;\r\n        this.observer.next(this.count);\r\n      }\r\n     }));\r\n  }\r\n\r\n  /**\r\n   * on Company Click\r\n   */\r\n  onCompanyClick(id){ \r\n    const url = '/d2-detail-company/' + id;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n}\r\n","<div class=\"block-find-advance\">\r\n    <div class=\"container\">\r\n        <div class=\"block-title\">\r\n            <h3 class=\"title-left\">\r\n                <span class=\"text\">\r\n                    Tìm kiếm công ty\r\n                </span>\r\n                <span class=\"line\"></span>\r\n            </h3>\r\n        </div>\r\n        <div class=\"row find-advance pt-3\">\r\n            <div class=\"col-md-6 relative title-search\">\r\n                <div class=\"form-group select-custom\">\r\n                    <i class=\"far fa-building\"></i>\r\n                    <input [(ngModel)]=\"companyName\" style=\"padding-left: 30px;\" class=\"form-control\"\r\n                        id=\"exampleFormControlInput1\" placeholder=\"Nhập tiêu đề hồ sơ, vị trí, địa điểm làm việc...\">\r\n                </div>\r\n            </div>\r\n\r\n            <!-- career name banh beo ne -->\r\n            <div class=\"col-md-2 col-6\">\r\n                <div class=\"form-group select-custom\">\r\n                    <i class=\"fas fa-list-ul\"></i>\r\n                    <select [(ngModel)]=\"careerId\" class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                        <option *ngFor=\"let careerItem of careeres\" [value]=\"careerItem.id\">{{careerItem.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-6\">\r\n                <div class=\"form-group select-custom\">\r\n                    <i class=\"fas fa-map-marker-alt\"></i>\r\n                    <select [(ngModel)]=\"cityId\" class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                        <option *ngFor=\"let cityItem of cities\" [value]=\"cityItem.id\">{{cityItem.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-6 btn-search mx-auto\">\r\n                <button (click)=\"onFilterClick()\"><span><i class=\"fas fa-search\"></i>TÌM KIẾM</span></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- start result finding companies -->\r\n<div *ngIf=\"isSearch==true\" class=\"list-company\">\r\n    <div class=\"container\">\r\n        <div class=\"title-total\">\r\n            <p class=\"mb-0\">\r\n                <span>{{countCompany}}</span> công ty phù hợp\r\n            </p>\r\n        </div>\r\n\r\n        <!-- start list companies-->\r\n        <div class=\"row list-company\">\r\n            <div class=\"col-md-3\" style=\"margin-bottom: 15px;\" *ngFor=\"let companyItem of companies\">\r\n                <div class=\"company-item d-flex\">\r\n                    <div class=\"card\">\r\n                        <img class=\"card-img-top\" [src]=\"companyItem.logo\" alt=\"\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">{{companyItem.companyname}}</h5>\r\n                            <p class=\"card-text\">{{companyItem.careername}}</p>\r\n                            <p class=\"card-text\">{{companyItem.cityname}}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end slide recruitment -->\r\n    </div>\r\n</div>\r\n<!-- end result finding companies -->\r\n\r\n<div class=\"list-company mt-50\">\r\n    <div class=\"container\">\r\n        <div class=\"block-title\">\r\n            <h3 class=\"title-left\">\r\n                <span class=\"text\">\r\n                    Công ty được truy cập nhiều nhất\r\n                </span>\r\n                <span class=\"line\"></span>\r\n            </h3>\r\n        </div>\r\n        <!-- start slide  recruitment-->\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div id=\"flow-slide\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n                     <!-- start carousel-inner-->\r\n                     <div class=\"carousel-inner\">\r\n                        <div class=\"carousel-item\" [ngClass]=\"{'active': slideItem.active}\"\r\n                            *ngFor=\"let slideItem of mostVistedCompanies\">\r\n                            <div class=\"row list-company\">\r\n                                <div class=\"col-md-3\" *ngFor=\"let rowSlide of slideItem.rowSlide\">\r\n                                    <div (click)=\"onCompanyClick(colSlide.id)\" class=\"company-item d-flex\"\r\n                                        *ngFor=\"let colSlide of rowSlide\">\r\n                                        <div class=\"card\">\r\n                                            <img class=\"card-img-top\" [src]=\"colSlide?.logo\" alt=\"\">\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">{{colSlide?.companyname}}</h5>\r\n                                                <p class=\"card-text\">{{colSlide?.careername}}</p>\r\n                                                <p>{{colSlide?.cityname}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- end carousel-inner -->\r\n\r\n                    <!-- start control next prev -->\r\n                    <a href=\"#flow-slide\" class=\"carousel-control-prev\" data-slide=\"prev\">\r\n                        <span class=\"carousel-control-prev-icon\">\r\n                        </span>\r\n                    </a>\r\n                    <a href=\"#flow-slide\" class=\"carousel-control-next\" data-slide=\"next\">\r\n                        <span class=\"carousel-control-next-icon\">\r\n                        </span>\r\n                    </a>\r\n                    <!-- end control next prev -->\r\n\r\n                    <!-- start indicators -->\r\n                    <ol class=\"carousel-indicators\">\r\n                        <li data-target=\"#flow-slide\" class=\"active\" data-slide-to=\"0\"></li>\r\n                        <li data-target=\"#flow-slide\" data-slide-to=\"1\"></li>\r\n                    </ol>\r\n                    <!-- end indicators -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end slide recruitment -->\r\n    </div>\r\n</div>\r\n\r\n<div class=\"list-company mt-50 mb-60\">\r\n    <div class=\"container\">\r\n        <div class=\"block-title\">\r\n            <h3 class=\"title-left\">\r\n                <span class=\"text\">\r\n                    Công ty mới nhất\r\n                </span>\r\n                <span class=\"line\"></span>\r\n            </h3>\r\n        </div>\r\n        <!-- start slide  recruitment-->\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div id=\"new-slide\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n                    <!-- start carousel-inner-->\r\n                    <div class=\"carousel-inner\">\r\n                        <div class=\"carousel-item\" [ngClass]=\"{'active': slideItem.active}\"\r\n                            *ngFor=\"let slideItem of newestCompanies\">\r\n                            <div class=\"row list-company\">\r\n                                <div class=\"col-md-3\" *ngFor=\"let rowSlide of slideItem.rowSlide\">\r\n                                    <div (click)=\"onCompanyClick(colSlide.id)\" class=\"company-item d-flex\"\r\n                                        *ngFor=\"let colSlide of rowSlide\">\r\n                                        <div class=\"card\">\r\n                                            <img class=\"card-img-top\" [src]=\"colSlide?.logo\" alt=\"\">\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">{{colSlide?.companyname}}</h5>\r\n                                                <p class=\"card-text\">{{colSlide?.careername}}</p>\r\n                                                <p class=\"card-text\">{{colSlide?.cityname}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- end carousel-inner -->\r\n\r\n                    <!-- start control next prev -->\r\n                    <a href=\"#new-slide\" class=\"carousel-control-prev\" data-slide=\"prev\">\r\n                        <span class=\"carousel-control-prev-icon\">\r\n                        </span>\r\n                    </a>\r\n                    <a href=\"#new-slide\" class=\"carousel-control-next\" data-slide=\"next\">\r\n                        <span class=\"carousel-control-next-icon\">\r\n                        </span>\r\n                    </a>\r\n                    <!-- end control next prev -->\r\n\r\n                    <!-- start indicators -->\r\n                    <ol class=\"carousel-indicators\">\r\n                        <li data-target=\"#new-slide\" class=\"active\" data-slide-to=\"0\"></li>\r\n                        <li data-target=\"#new-slide\" data-slide-to=\"1\"></li>\r\n                    </ol>\r\n                    <!-- end indicators -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end slide recruitment -->\r\n        \r\n    </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { D1ListCompanyComponent } from './d1-list-company.component';\r\n\r\n@NgModule({\r\n    declarations: [D1ListCompanyComponent],\r\n    imports: [\r\n        TransferHttpCacheModule,\r\n        CommonModule,\r\n\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                component: D1ListCompanyComponent,\r\n                children: []\r\n            }\r\n        ]),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n    ]\r\n})\r\n\r\nexport class D1ListCompanyModule { }\r\n"]}