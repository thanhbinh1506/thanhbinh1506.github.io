{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/api-service/cookie-service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","HomePageModule","LoginModule","AppRoutingModule","forRoot","initialNavigation","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withServerTransition","appId","register","enabled","production","declarations","providers","bootstrap","CRUDCookieService","cookieService","key","value","delete","check","set","get","deleteAll","environment","document","addEventListener","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: () => import('./home-page/home-page.module').then(m => m.HomePageModule)\r\n    },\r\n    {\r\n        path: 'login',\r\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {\r\n        initialNavigation: 'enabled'\r\n    })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport $ from \"jquery\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'my-app';\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        // $(window).resize(function () {\r\n        //     if ($(document).width() >= 768) {\r\n        //         $(\".respon-menu\").css(\"display\", \"none\");\r\n        //     }\r\n        // });\r\n\r\n    }\r\n}\r\n","<!-- <ngx-loading-bar [color]=\"'sea-green'\" [diameter]=\"'50px'\" [height]=\"'2px'\"></ngx-loading-bar> -->\r\n<!-- <progress-bar [progress]=\"100\" [color-degraded]=\"{'0': '#00cbcb',  '15': '#f9c3d3', '25': '#fd8c8e'}\">\r\n</progress-bar> -->\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CRUDCookieService } from './common/api-service/cookie-service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'my-app' }),\r\n        AppRoutingModule,\r\n        TransferHttpCacheModule,\r\n        CommonModule,\r\n        HttpClientModule,\r\n        // https://www.npmjs.com/package/ngx-toastr\r\n        ToastrModule.forRoot(), // ToastrModule added\r\n\r\n        // https://www.npmjs.com/package/angular-animations\r\n        BrowserAnimationsModule,\r\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    ],\r\n    providers: [CookieService, CRUDCookieService,],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable()\r\nexport class CRUDCookieService {\r\n\r\n    constructor(private cookieService: CookieService\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * set data by key\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setCookie(key, value) {\r\n        this.cookieService.delete(key);\r\n        if (this.cookieService.check(key)) {\r\n            this.cookieService.delete(key);\r\n        }\r\n\r\n        this.cookieService.set(key, value);\r\n    }\r\n\r\n    /**\r\n     * get data Cookie by key\r\n     * @param key \r\n     */\r\n    getCookie(key): string {\r\n        if (this.cookieService.check(key)) {\r\n            return this.cookieService.get(key);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * set data by key\r\n     * @param key \r\n     * @param value \r\n     */\r\n    clearAll() {\r\n        this.cookieService.deleteAll();\r\n    }\r\n\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n"]}