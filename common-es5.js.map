{"version":3,"sources":["webpack:///src/app/common/api-service/api.service.ts","webpack:///src/app/common/api-service/send-data.service.ts","webpack:///src/app/common/core/login-cookie.ts"],"names":["ApiService","httpClient","toastrService","cookie","sendDataService","url","getAllWhatUrl","audio","Audio","language","candidateId","getCookie","setCookie","param","what","httpOptions","headers","post","JSON","stringify","pipe","response","data","parse","result","forEach","item","fields","id","pk","push","date","month","getMonth","day","getDate","getFullYear","console","log","json","mess","error","timeOut","progressBar","success","warning","src","load","play","content","dummyElem","document","createElement","innerHTML","body","appendChild","textContent","removeChild","str","replace","SendDataService","sendData","sendDataLanguage","data$","asObservable","language$","next","LoginCookie","accountLogin"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SendDataService } from './send-data.service';\r\nimport { CRUDCookieService } from './cookie-service';\r\n// import { Security } from './security';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    private url = '';\r\n    private getAllWhatUrl = '';\r\n    private audio = new Audio();\r\n    public language = 'vn';\r\n    // protected se: Security = new Security();\r\n\r\n    constructor(public httpClient: HttpClient,\r\n        private toastrService: ToastrService,\r\n        public cookie: CRUDCookieService,\r\n        public sendDataService: SendDataService\r\n    ) {\r\n        this.url = \"http://localhost:8000/api/\";\r\n        this.url = \"http://localhost/test/selectAllByWhat.php\";\r\n        this.url = \"http://35.240.200.20/src/Controller/SelectAllByWhat.php\";\r\n        this.url = \"http://hoctienganhphanxa.com/hoctienganhphanxa.com/hce/youngpinejobapi/Controller/SelectAllByWhatFE.php\";\r\n\r\n        // init data language\r\n        if (this.cookie.getCookie('language') == null) {\r\n            this.cookie.setCookie('language', 'vn');\r\n        }\r\n    }\r\n    public candidateId = '24';\r\n\r\n    /**\r\n     * get Language\r\n     */\r\n    getLanguage() {\r\n        if (this.cookie.getCookie('language') != null) {\r\n            this.language = this.cookie.getCookie('language');\r\n        } \r\n        return this.language;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param param \r\n     * @param what \r\n     */\r\n    excuteAllByWhat(param: any, what: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        };\r\n\r\n        param.what = what;\r\n        this.getAllWhatUrl = this.url;\r\n\r\n        // console.log('Param input', JSON.stringify(param));\r\n\r\n        // decode\r\n        // param = this.se.encode1(param);\r\n\r\n        return this.httpClient.post<any>(this.getAllWhatUrl, JSON.stringify(param), httpOptions)\r\n            .pipe(map((response: Response) => {\r\n                return response;\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * convert To Data\r\n     * @param data \r\n     */\r\n    convertToData(data): any[] {\r\n        data = JSON.parse(data + '');\r\n        let result: any[] = [];\r\n        data.forEach(item => {\r\n            item.fields.id = item.pk;\r\n            result.push(item.fields);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param date \r\n     */\r\n    formatDate(date: Date): string {\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return date.getFullYear() + '-'\r\n            + (month > 9 ? month : ('0' + month)) + '-'\r\n            + (day > 9 ? day : ('0' + day));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param param \r\n     * @param what \r\n     */\r\n    excuteAllByWhatWithUrl(url: string, param: any, what: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'my-auth-token',\r\n                'Access-Control-Allow-Origin': '*',\r\n            })\r\n        };\r\n\r\n        this.getAllWhatUrl = this.url + what;\r\n\r\n        console.log('Param input', JSON.stringify(param));\r\n\r\n        return this.httpClient.post<any>(url, JSON.stringify(param), httpOptions)\r\n            .pipe(map((response: Response) => response.json()));\r\n    }\r\n\r\n    public showError(mess: string) {\r\n        this.toastrService.error('Pinks Ways!', mess, {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public showSuccess(mess: string) {\r\n        this.toastrService.success('Pinks Ways!', mess + '!', {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public showWarning(mess: string) {\r\n        this.toastrService.warning('Pinks Ways!', mess + '!', {\r\n            timeOut: 1500,\r\n            progressBar: true\r\n        });\r\n    }\r\n\r\n    public playSuccess() {\r\n        this.audio = new Audio();\r\n        this.audio.src = \"../../assets/sounds/beep-02.wav\";\r\n        this.audio.load();\r\n        this.audio.play();\r\n    }\r\n\r\n    public playError() {\r\n        this.audio = new Audio();\r\n        this.audio.src = \"../../assets/sounds/beep-05.wav\";\r\n        this.audio.load();\r\n        this.audio.play();\r\n    }\r\n\r\n    /**\r\n     * format Html Tag\r\n     * @param content \r\n     */\r\n    formatHtmlTag(content) {\r\n        let result: string;\r\n        let dummyElem = document.createElement('DIV');\r\n        dummyElem.innerHTML = content;\r\n        document.body.appendChild(dummyElem);\r\n        result = dummyElem.textContent;\r\n        document.body.removeChild(dummyElem);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n      * bỏ dấu tiếng việt để search\r\n    */\r\n    private cleanAccents(str: string): string {\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n        str = str.replace(/Đ/g, \"D\");\r\n        // Combining Diacritical Marks\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // huyền, sắc, hỏi, ngã, nặng \r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // mũ â (ê), mũ ă, mũ ơ (ư)\r\n\r\n        return str;\r\n    }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class SendDataService {\r\n    data$: Observable<any>;\r\n    language$: Observable<any>;\r\n    private sendData = new Subject<any>();\r\n    private sendDataLanguage = new Subject<any>();\r\n\r\n    constructor() {\r\n        this.data$ = this.sendData.asObservable();\r\n        this.language$ = this.sendDataLanguage.asObservable();\r\n    }\r\n\r\n    /**\r\n     * set Data Send\r\n     * @param data \r\n     */\r\n    setDataSend(data) {\r\n        this.sendData.next(data);\r\n    }\r\n\r\n    /**\r\n     * set Data Language\r\n     * @param data \r\n     */\r\n    setDataLanguage(data) {\r\n        this.sendDataLanguage.next(data);\r\n    }\r\n}","// import { CookieService } from 'ngx-cookie-service';\r\nimport { Injectable } from '@angular/core'; \r\n\r\n@Injectable()\r\nexport class LoginCookie {\r\n    public accountLogin: string = '0';\r\n\r\n    // constructor(\r\n    //     private cookieService: CookieService\r\n    // ) {\r\n\r\n    // }\r\n\r\n    // /**\r\n    //  * setAccountLogin\r\n    //  * @param value \r\n    //  */\r\n    // public setAccountLogin(value: string) {\r\n    //     this.cookieService.set('accountLogin', value);\r\n    //     this.accountLogin = value;\r\n    // }\r\n\r\n    // /**\r\n    //  * getAccountLogin\r\n    //  */\r\n    // public getAccountLogin(): string {\r\n    //     this.accountLogin = this.cookieService.get('accountLogin');\r\n    //     return this.accountLogin;\r\n    // } \r\n\r\n}"]}